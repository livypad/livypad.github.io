<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>杂谈 on zhh's blog</title><link>https://livypad.github.io/tags/%E6%9D%82%E8%B0%88/</link><description>zhh's blog (杂谈)</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 21 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://livypad.github.io/tags/%E6%9D%82%E8%B0%88/index.xml" rel="self" type="application/rss+xml"/><item><title>遥远的时间有关的童话/寓言（？</title><link>https://livypad.github.io/post/2022-06-21-fairytalerabbit/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://livypad.github.io/post/2022-06-21-fairytalerabbit/</guid><description>&lt;h1 id="遥远的时间有关的童话寓言" >遥远的时间有关的童话/寓言（？
&lt;span>
&lt;a href="#%e9%81%a5%e8%bf%9c%e7%9a%84%e6%97%b6%e9%97%b4%e6%9c%89%e5%85%b3%e7%9a%84%e7%ab%a5%e8%af%9d%e5%af%93%e8%a8%80">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>小时候看儿童向杂志看到一个略显黑暗（？）的童话/寓言（？。有个小兔子不喜欢上学，喜欢星期天放假。一个老兔子给了 ta 一筐胡萝卜，吃一根就能到星期天了。小兔子就天天吃那筐胡萝卜，天天过星期天。有一天胡萝卜吃完了，小兔子也老了。因为胡罗卜的机制是跳过星期一到六。&lt;/p>
&lt;p>记忆会自动分类记录不同的状态，日子过得就像那个小兔子。学习时会自动续接之前看到到的页码，做的题，而不会考虑之前的视频到哪一 p，知乎看到哪个问题。用记忆回顾关键点，真的会忽视中间其他领域用时。大学这种，以假期定界的生活。每年大休息状态：寒假和暑假；大工作状态：两个学期。4 年就只是 8 个学期。8 个萝卜就过去 4 年了。&lt;/p></description></item><item><title>FFmpeg转换音乐文件格式</title><link>https://livypad.github.io/post/2022-03-23-ffmpeg/</link><pubDate>Wed, 23 Mar 2022 00:00:00 +0000</pubDate><guid>https://livypad.github.io/post/2022-03-23-ffmpeg/</guid><description>&lt;p>&lt;a href="https://ffmpeg.org/">FFmpeg&lt;/a>是一个开源强大的音视频库。这里用 FFmpeg“大炮打蚊子”，用来当格式工厂用，转音乐文件格式。下面是*Unix 环境下用&lt;code>find&lt;/code>命令搭配 FFmpeg，将当前工作路径下的所用*.flac 转化为*.mp3 格式。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>find . -name &lt;span style="color:#c30">&amp;#34;*.flac&amp;#34;&lt;/span> -maxdepth &lt;span style="color:#f60">1&lt;/span> -exec ffmpeg -i &lt;span style="color:#555">{}&lt;/span> -ab 320k -map_metadata &lt;span style="color:#f60">0&lt;/span> -id3v2_version &lt;span style="color:#f60">3&lt;/span> &lt;span style="color:#555">{}&lt;/span>.mp3 &lt;span style="color:#c30;font-weight:bold">\;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="rust-的-cli-toy-程序" >Rust 的 cli toy 程序
&lt;span>
&lt;a href="#rust-%e7%9a%84-cli-toy-%e7%a8%8b%e5%ba%8f">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>由此，可以顺手搞一个 rust 的 cli 程序，实现任何音乐格式的互转。主要是使用&lt;code>walkdir&lt;/code>这个库，不用自己实现遍历。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>[package]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>name = &lt;span style="color:#c30">&amp;#34;music_converter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>version = &lt;span style="color:#c30">&amp;#34;0.1.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>edition = &lt;span style="color:#c30">&amp;#34;2018&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#09f;font-style:italic"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[dependencies]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>walkdir = &lt;span style="color:#c30">&amp;#34;2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#069;font-weight:bold">use&lt;/span>&lt;span style="color:#bbb"> &lt;/span>std::borrow::Borrow;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#069;font-weight:bold">use&lt;/span>&lt;span style="color:#bbb"> &lt;/span>std::env;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#069;font-weight:bold">use&lt;/span>&lt;span style="color:#bbb"> &lt;/span>std::io;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#069;font-weight:bold">use&lt;/span>&lt;span style="color:#bbb"> &lt;/span>std::path::Path;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#069;font-weight:bold">use&lt;/span>&lt;span style="color:#bbb"> &lt;/span>std::process::{Command,&lt;span style="color:#bbb"> &lt;/span>Stdio};&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#069;font-weight:bold">use&lt;/span>&lt;span style="color:#bbb"> &lt;/span>walkdir::WalkDir;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#069;font-weight:bold">fn&lt;/span> &lt;span style="color:#c0f">cin&lt;/span>(print_info: &lt;span style="color:#069">&amp;amp;&lt;/span>&lt;span style="color:#078;font-weight:bold">str&lt;/span>)&lt;span style="color:#bbb"> &lt;/span>-&amp;gt; &lt;span style="color:#366">String&lt;/span> {&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>println!(&lt;span style="color:#c30">&amp;#34;{}&amp;#34;&lt;/span>,&lt;span style="color:#bbb"> &lt;/span>print_info);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">mut&lt;/span>&lt;span style="color:#bbb"> &lt;/span>input&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">String&lt;/span>::new();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>io::stdin()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.read_line(&lt;span style="color:#555">&amp;amp;&lt;/span>&lt;span style="color:#069;font-weight:bold">mut&lt;/span>&lt;span style="color:#bbb"> &lt;/span>input)&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.expect(&lt;span style="color:#c30">&amp;#34;Failed to read line&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">return&lt;/span>&lt;span style="color:#bbb"> &lt;/span>input;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#069;font-weight:bold">fn&lt;/span> &lt;span style="color:#c0f">path_match&lt;/span>&lt;span style="color:#555">&amp;lt;&amp;#39;&lt;/span>&lt;span style="color:#309">a&lt;/span>&lt;span style="color:#555">&amp;gt;&lt;/span>(path: &lt;span style="color:#069">&amp;amp;&lt;/span>&lt;span style="color:#555">&amp;#39;&lt;/span>&lt;span style="color:#309">a&lt;/span> &lt;span style="color:#0a8;font-weight:bold">Path&lt;/span>,&lt;span style="color:#bbb"> &lt;/span>ext: &lt;span style="color:#069">&amp;amp;&lt;/span>&lt;span style="color:#555">&amp;#39;&lt;/span>&lt;span style="color:#309">a&lt;/span> &lt;span style="color:#078;font-weight:bold">str&lt;/span>,&lt;span style="color:#bbb"> &lt;/span>not_full_name: &lt;span style="color:#078;font-weight:bold">bool&lt;/span>)&lt;span style="color:#bbb"> &lt;/span>-&amp;gt; &lt;span style="color:#366">Option&lt;/span>&lt;span style="color:#555">&amp;lt;&lt;/span>(&lt;span style="color:#555">&amp;amp;&amp;#39;&lt;/span>&lt;span style="color:#309">a&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#078;font-weight:bold">str&lt;/span>,&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">String&lt;/span>)&lt;span style="color:#555">&amp;gt;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>not_full_name&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Some&lt;/span>(file_ext)&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path.extension()&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>file_ext.to_str().unwrap()&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">==&lt;/span>&lt;span style="color:#bbb"> &lt;/span>ext.trim()&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path_name&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path.to_str().unwrap();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">mut&lt;/span>&lt;span style="color:#bbb"> &lt;/span>file_name&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.clone()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.file_stem()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.unwrap()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.to_str()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.unwrap()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.to_string();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>file_name.push_str(&lt;span style="color:#c30">&amp;#34;.mp3&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">return&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Some&lt;/span>((path_name.borrow(),&lt;span style="color:#bbb"> &lt;/span>file_name));&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">else&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">return&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">None&lt;/span>;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">else&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">return&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">None&lt;/span>;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">else&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>ext&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">==&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path.clone().file_name().unwrap().to_str().unwrap()&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path_name&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path.to_str().unwrap();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">mut&lt;/span>&lt;span style="color:#bbb"> &lt;/span>file_name_no_ext&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.clone()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.file_stem()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.unwrap()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.to_str()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.unwrap()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.to_string();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>file_name_no_ext.push_str(&lt;span style="color:#c30">&amp;#34;.mp3&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">return&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Some&lt;/span>((path_name.borrow(),&lt;span style="color:#bbb"> &lt;/span>file_name_no_ext));&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">else&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">return&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">None&lt;/span>;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#069;font-weight:bold">fn&lt;/span> &lt;span style="color:#c0f">call_ffmpeg&lt;/span>(src_name: &lt;span style="color:#069">&amp;amp;&lt;/span>&lt;span style="color:#078;font-weight:bold">str&lt;/span>,&lt;span style="color:#bbb"> &lt;/span>tgt_name: &lt;span style="color:#069">&amp;amp;&lt;/span>&lt;span style="color:#078;font-weight:bold">str&lt;/span>)&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">mut&lt;/span>&lt;span style="color:#bbb"> &lt;/span>child&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>Command::new(&lt;span style="color:#c30">&amp;#34;ffmpeg&amp;#34;&lt;/span>)&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.args([&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;-i&amp;#34;&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>src_name,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;-ab&amp;#34;&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;320k&amp;#34;&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;-map_metadata&amp;#34;&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;0&amp;#34;&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;-id3v2_version&amp;#34;&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;3&amp;#34;&lt;/span>,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>tgt_name,&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>])&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.stdout(Stdio::null())&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.spawn()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.expect(&lt;span style="color:#c30">&amp;#34;Failed to execute command&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>ecode&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>child.wait().expect(&lt;span style="color:#c30">&amp;#34;failed to wait on child&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>println!(&lt;span style="color:#c30">&amp;#34;{}&amp;#34;&lt;/span>,&lt;span style="color:#bbb"> &lt;/span>ecode);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">return&lt;/span>;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#069;font-weight:bold">fn&lt;/span> &lt;span style="color:#c0f">main&lt;/span>()&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Ok&lt;/span>(current_dir)&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>env::current_dir()&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>current_dir&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>current_dir.as_path();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>println!(&lt;span style="color:#c30">&amp;#34;音乐转换器，请保证音乐文件在该脚本所在目录&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">loop&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>mode&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>cin(&lt;span style="color:#c30">&amp;#34;输入模式，q退出，ls列出当前目录下某一拓展名的文件，r递归转换，nr非递归转换，o单文件转换&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">match&lt;/span>&lt;span style="color:#bbb"> &lt;/span>mode.to_lowercase().trim()&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;ls&amp;#34;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&amp;gt;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>ext&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>cin(&lt;span style="color:#c30">&amp;#34;输入要查看的拓展名&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>WalkDir::new(current_dir).into_iter().for_each(&lt;span style="color:#555">|&lt;/span>e&lt;span style="color:#555">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Ok&lt;/span>(e)&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>e&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>e.path();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Some&lt;/span>((src_path,&lt;span style="color:#bbb"> &lt;/span>_tgt_name))&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path_match(path,&lt;span style="color:#bbb"> &lt;/span>ext.trim(),&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">true&lt;/span>)&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>println!(&lt;span style="color:#c30">&amp;#34;{}&amp;#34;&lt;/span>,&lt;span style="color:#bbb"> &lt;/span>src_path);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>});&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;r&amp;#34;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&amp;gt;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>ext&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>cin(&lt;span style="color:#c30">&amp;#34;输入待转换的拓展名&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>WalkDir::new(current_dir).into_iter().for_each(&lt;span style="color:#555">|&lt;/span>e&lt;span style="color:#555">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Ok&lt;/span>(e)&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>e&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>e.path();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Some&lt;/span>((src_path,&lt;span style="color:#bbb"> &lt;/span>tgt_name))&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path_match(path,&lt;span style="color:#bbb"> &lt;/span>ext.trim(),&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">true&lt;/span>)&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>call_ffmpeg(src_path,&lt;span style="color:#bbb"> &lt;/span>tgt_name.as_str());&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>});&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;nr&amp;#34;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&amp;gt;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>ext&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>cin(&lt;span style="color:#c30">&amp;#34;输入待转换的拓展名&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>WalkDir::new(current_dir)&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.max_depth(&lt;span style="color:#f60">1&lt;/span>)&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.into_iter()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.for_each(&lt;span style="color:#555">|&lt;/span>e&lt;span style="color:#555">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Ok&lt;/span>(e)&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>e&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>e.path();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Some&lt;/span>((src_path,&lt;span style="color:#bbb"> &lt;/span>tgt_name))&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>path_match(path,&lt;span style="color:#bbb"> &lt;/span>ext.trim(),&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">true&lt;/span>)&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>call_ffmpeg(src_path,&lt;span style="color:#bbb"> &lt;/span>tgt_name.as_str());&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>});&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;o&amp;#34;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&amp;gt;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>filename&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>cin(&lt;span style="color:#c30">&amp;#34;输入待转换的文件名&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>WalkDir::new(current_dir)&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.max_depth(&lt;span style="color:#f60">1&lt;/span>)&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.into_iter()&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>.for_each(&lt;span style="color:#555">|&lt;/span>e&lt;span style="color:#555">|&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Ok&lt;/span>(e)&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>e&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>path&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb"> &lt;/span>e.path();&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">let&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#366">Some&lt;/span>((src_path,&lt;span style="color:#bbb"> &lt;/span>tgt_name))&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>path_match(path,&lt;span style="color:#bbb"> &lt;/span>filename.trim(),&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">false&lt;/span>)&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>call_ffmpeg(src_path,&lt;span style="color:#bbb"> &lt;/span>tgt_name.as_str());&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>});&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;q&amp;#34;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&amp;gt;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">break&lt;/span>;&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>_&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">=&amp;gt;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>println!(&lt;span style="color:#c30">&amp;#34;input not support&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#069;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>mode.trim()&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#555">==&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#c30">&amp;#34;123&amp;#34;&lt;/span>&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>println!(&lt;span style="color:#c30">&amp;#34;hi&amp;#34;&lt;/span>);&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>};&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">&lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>“如意”的两种实现</title><link>https://livypad.github.io/post/2022-03-15-asyouwish/</link><pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate><guid>https://livypad.github.io/post/2022-03-15-asyouwish/</guid><description>&lt;ol>
&lt;li>&lt;a href="#%E5%A6%82%E6%84%8F">“如意”&lt;/a>
&lt;ol>
&lt;li>&lt;a href="#%E4%B8%AD%E6%96%87">中文&lt;/a>&lt;/li>
&lt;li>&lt;a href="#english">English&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="如意" >“如意”
&lt;span>
&lt;a href="#%e5%a6%82%e6%84%8f">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;h2 id="中文" >中文
&lt;span>
&lt;a href="#%e4%b8%ad%e6%96%87">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>“万事如意”其实可以有两种实现方式：可以是提出心意之后即时实现；也可以是提前预知会被提出的心意并提前准备好。后一种方式时间更加宽松，对“灯神”能力需求可以降低。只要分支预测准确率足够高，提前准备带来的优势应该是可以超过偶发的预测失败以及维护一个预测器的额外代价（重新即时准备，旧的准备浪费）。所以说，“万事如意”的“灯神“不一定是神通广大，可能只是你太容易被 ta 理解。&lt;/p>
&lt;h2 id="english" >English
&lt;span>
&lt;a href="#english">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>In fact, &amp;ldquo;as you wish“ can be accomplished in two different strategies, a genie can either fulfill ones&amp;rsquo; dream or wish after its proposal, or it can predict that particular wish and prepare for it in advance. The latter strategy has a much looser time constraint on genie, therefore requiring less magic power. As long as branch predictor&amp;rsquo;s accuracy is high enough, the advantage of prediction might outweigh the extra cost of maintaining the predictor and penalty of misprediction (former preparation becomes useless and the wish need to be fulfilled instantly). To draw a conclusion, a genie who promise to follow any order may not be extremely resourceful, instead, maybe you are too easy to understand and to be predicted.&lt;/p></description></item><item><title>IO效率与人</title><link>https://livypad.github.io/post/2022-02-20-ioeff/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><guid>https://livypad.github.io/post/2022-02-20-ioeff/</guid><description>&lt;ul>
&lt;li>&lt;a href="#io-%E6%95%88%E7%8E%87%E4%B8%8E%E4%BA%BA">IO 效率与人&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF">状态信息&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E4%BC%A0%E7%BB%9F%E4%B9%A6%E4%BF%A1%E7%9A%84%E4%BD%8E%E5%B8%A6%E5%AE%BD">传统书信的低带宽（？&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="io-效率与人" >IO 效率与人
&lt;span>
&lt;a href="#io-%e6%95%88%e7%8e%87%e4%b8%8e%e4%ba%ba">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;h2 id="状态信息" >状态信息
&lt;span>
&lt;a href="#%e7%8a%b6%e6%80%81%e4%bf%a1%e6%81%af">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;blockquote>
&lt;p>Scales D J, Nelson M, Venkitachalam G. The design of a practical system for fault-tolerant virtual machines 【J】. ACM SIGOPS Operating Systems Review, 2010, 44(4): 30–39.&lt;/p>
&lt;/blockquote>
&lt;p>VMware 公司有一篇 &lt;strong>VM-FT&lt;/strong>的论文，介绍了如何借助虚拟机技术，构建一个主/从备份的容错系统。大部分计算机的指令是确定性的（deterministic），给定当前状态和指令，执行之后的状态是确定的。外界对内部的输入、产生随机数等少部分情况下，计算机执行是非确定性的（non-deterministic）。&lt;strong>VM-FT&lt;/strong>论文的核心思想是通过虚拟机拦截下主机所有 non-deterministic 的指令，产生一个 log，通过网络发给从机，这样可以在完全不了解上层应用情况下，实现双机器运行任何软件的同步备份。这样依赖状态机的假设的方法存在一个问题，无法应对多核情况。多核执行时候的细微先后顺序是不能确定的，从而从相同状态和指令序列出发不能保证最后相同状态结果。&lt;/p>
&lt;p>为了清晰传递自己的一个想法，自然希望能直接传递自己思想活动状态；别人直接“共情”我的思想活动，这是最容易理解的方式（？）；通过传递大量思考当中的细节（类比于指令），别人直接复现这些细节，相当于传递思想活动状态。但问题是人的大脑的神经元连接天然并行，比多核的执行顺序和并行度高的多的多；思考当中的各种补充细节，也相应的比指令序列多的多；表述这些细节，还需要自己加工成语言文字（即使这种直接表达思考细节，而不是构建成文章已经省略了很多文章结构的思考，语言文字的输出带宽还是比不上思想产生的速度）。VMware 最后似乎对于多核，还是放弃了状态机方法，回到传统的传 checkpoint 整体传状态。&lt;/p>
&lt;blockquote>
&lt;p>或许需要一个卡拉（？&lt;/p>
&lt;/blockquote>
&lt;h2 id="传统书信的低带宽" >传统书信的低带宽（？
&lt;span>
&lt;a href="#%e4%bc%a0%e7%bb%9f%e4%b9%a6%e4%bf%a1%e7%9a%84%e4%bd%8e%e5%b8%a6%e5%ae%bd">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;blockquote>
&lt;p>为什么要在聊天时候发网页链接、屏幕截图？&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>为了可信，有出处可以溯源&lt;/li>
&lt;li>为了避免讨论时候自己概括让对方先入为主&lt;/li>
&lt;li>为了提供自己这边的输出带宽（？&lt;/li>
&lt;/ul>
&lt;p>如果是我自己概括网页、截图内容，信息流动是&lt;strong>网页/截图-&amp;gt;信息理解-&amp;gt;概括成语言文字-&amp;gt;打字-&amp;gt;对方理解语言文字&lt;/strong>；发链接和截图的话，信息流动是&lt;strong>网页/截图-&amp;gt;信息理解-&amp;gt;发送链接/截图-&amp;gt;对方理解网页/截图&lt;/strong>。阅读理解图文内容，并形成一个初步的感受印象和思考的速度很快，而且如前所说，思维里面可以顺序稍微模糊；但是如果需要再次概括输出，语言文字是线性的，需要考虑组织文字逻辑的问题。如果直接发链接/截图，可以跳过语言组织环节。&lt;/p>
&lt;p>因此我莫名的害怕传统书信（？。现代的即时通讯工具即使加上能发链接/截图的优化，如前所述有时候还是不能匹配思维产生速度。如果媒介换成书信，只能使用语言文字，极高的延迟（？），那必然至少需要改变现在的交流模式。如果再碰上达西那种一封信不愿意多几张信纸写多几件事的家伙，那这个信息量就可想而知了。&lt;/p></description></item><item><title>王子游戏以及该游戏的不平衡性</title><link>https://livypad.github.io/post/2022-01-20-prince/</link><pubDate>Thu, 20 Jan 2022 00:00:00 +0000</pubDate><guid>https://livypad.github.io/post/2022-01-20-prince/</guid><description>&lt;ol>
&lt;li>&lt;a href="#%E7%8E%8B%E5%AD%90%E6%B8%B8%E6%88%8F%E4%BB%A5%E5%8F%8A%E8%AF%A5%E6%B8%B8%E6%88%8F%E7%9A%84%E4%B8%8D%E5%B9%B3%E8%A1%A1%E6%80%A7">王子游戏以及该游戏的不平衡性&lt;/a>
&lt;ol>
&lt;li>&lt;a href="#%E8%A7%84%E5%88%99">规则&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E7%90%86%E6%83%B3%E6%9D%A1%E4%BB%B6">理想条件&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E5%9D%87%E8%A1%A1%E7%9A%84%E7%AD%96%E7%95%A5">均衡的策略&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E8%BF%90%E6%B0%94%E6%88%90%E5%88%86">运气成分&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="王子游戏以及该游戏的不平衡性" >王子游戏以及该游戏的不平衡性
&lt;span>
&lt;a href="#%e7%8e%8b%e5%ad%90%e6%b8%b8%e6%88%8f%e4%bb%a5%e5%8f%8a%e8%af%a5%e6%b8%b8%e6%88%8f%e7%9a%84%e4%b8%8d%e5%b9%b3%e8%a1%a1%e6%80%a7">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;h2 id="规则" >规则
&lt;span>
&lt;a href="#%e8%a7%84%e5%88%99">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>共有王子，公主和侍女（只能说真话的一边），皇后、女伯爵和侍卫（只能说假话的一边），男爵和牧师（可以任意选择说真假话）&lt;/li>
&lt;li>大家除了王子互相知晓彼此身份，王子对其他人身份都不知道&lt;/li>
&lt;li>王子需要向其他人每人问一个问题，再问完全员之后，可以选择任意一人再问一个问题。问题必须从下列 3 个中选择，回答必须按照上述身份的规则给出：
&lt;ol>
&lt;li>你的身份是什么&lt;/li>
&lt;li>指定的某人身份是什么&lt;/li>
&lt;li>公主是谁&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>问完所有问题，王子需要指定谁是公主，按下列情况结束游戏并判断胜负
&lt;ol>
&lt;li>王子指定的人是公主：王子、公主和侍女获胜&lt;/li>
&lt;li>王子指定的人是皇后：皇后、女伯爵和侍卫获胜&lt;/li>
&lt;li>王子指定的人既不是公主也不是皇后，而是其他任何身份：牧师和男爵获胜&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="理想条件" >理想条件
&lt;span>
&lt;a href="#%e7%90%86%e6%83%b3%e6%9d%a1%e4%bb%b6">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>在好人优势更大的情况下：&lt;/p>
&lt;ul>
&lt;li>可以无限次问问题&lt;/li>
&lt;li>一个已知明牌的假话哥&lt;/li>
&lt;/ul>
&lt;p>注意其中的可以无限次问问题的条件。该条件下，每个人对局面看法都是已知的，而且真话哥没有别的选择，&lt;em>&lt;strong>唯一的变化来自于假话哥和胡话哥的配合&lt;/strong>&lt;/em>。如果假话哥和胡话哥之间配合，能保证了两边局面完全对称，两边胜率完全平分，可以认为这样的策略是两边都能接受的策略。&lt;/p>
&lt;h2 id="均衡的策略" >均衡的策略
&lt;span>
&lt;a href="#%e5%9d%87%e8%a1%a1%e7%9a%84%e7%ad%96%e7%95%a5">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>3 组人分为 真话组、假话组、胡话组，组内部自称好侍女和公主。&lt;/p>
&lt;p>明牌专说假话的人&lt;/p>
&lt;ul>
&lt;li>称自己是胡话哥（确实为假）&lt;/li>
&lt;li>说别人三个组都是逆顺序的侍女和公主（逆了顺序，一定为假话）&lt;/li>
&lt;li>公主在任意一组自称侍女的位置（逆了顺序，一定为假话）&lt;/li>
&lt;/ul>
&lt;p>这样明牌说假话的人事实上王子从 ta 口中不能得到任何有用信息。&lt;/p>
&lt;p>可能有以下两种可能性(&lt;em>胡话组&lt;/em>用斜体，&lt;strong>假话组&lt;/strong>是粗体)。第一种情况，&lt;em>胡话组&lt;/em>和真话组对明牌假话人身份认同一致；第二种情况，&lt;em>胡话组&lt;/em>和&lt;strong>假话组&lt;/strong>对明牌假话人身份认同一致。两种情况对于王子绝对对称&lt;/p>
&lt;ul>
&lt;li>两个互称胡话的组，对明牌假话人意见一致&lt;/li>
&lt;li>两个互称胡话的组，对剩下那个组都认为是假话组，且次序一致&lt;/li>
&lt;li>必有一个组被其他两组认为是胡话组，且次序相反：注意到第 2 种情况，假话组由于要说假话，对胡话组判断和真话组对胡话组判断次序相反；所以第 1 种情况，胡话组和假话组对真话组下判断时，注意次序相反就行&lt;/li>
&lt;/ul>
&lt;p>因此只有靠运气选组，也就是最后运气成分选到公主。&lt;/p>
&lt;p>&lt;img src="https://livypad.github.io/assets/img/2022-01-20-1.png" alt="情形1">&lt;/p>
&lt;p>&lt;img src="https://livypad.github.io/assets/img/2022-01-20-2.png" alt="情形2">&lt;/p>
&lt;h2 id="运气成分" >运气成分
&lt;span>
&lt;a href="#%e8%bf%90%e6%b0%94%e6%88%90%e5%88%86">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;blockquote>
&lt;p>概率计算不保证正确&lt;/p>
&lt;/blockquote>
&lt;p>已知上述 2 种情况，真话组&lt;/p>
&lt;ul>
&lt;li>要么被 2 组同时认为是胡话且次序相反（此时被 2 组同时认为是假话的组是假话组）&lt;/li>
&lt;li>要么被 2 组同时认为是假话（此时被 2 组同时认为是胡话的组是胡话组）&lt;/li>
&lt;/ul>
&lt;p>所以王子理论胜率也只有抛硬币的 $50\%$ ，其他两组分享 $25\%$ 。在不理想条件下，王子理论胜率应该更低。&lt;/p></description></item><item><title>历史</title><link>https://livypad.github.io/post/2022-01-16-history/</link><pubDate>Sun, 16 Jan 2022 00:00:00 +0000</pubDate><guid>https://livypad.github.io/post/2022-01-16-history/</guid><description>&lt;h1 id="学习历史" >学习历史
&lt;span>
&lt;a href="#%e5%ad%a6%e4%b9%a0%e5%8e%86%e5%8f%b2">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>那些摆出一个多年前的某文章等材料，以当时多先进来批判当下多落后的，事实上绝大多数人也不会在提自己的观点时候搞详细的文献/历史综述（包括现在的我）。这或许是某种程度上的双标。&lt;/p>
&lt;p>对于大众而言，实在不可能指望有多少材料是真的能在当时普及的。即使别人看了材料能认同当中的观点，可是当年这材料很可能根本就没传播到ta，然后现在拿出材料希望别人持有那样的观点。一边期待一个“冷门”材料被别人掌握，一边自己也不搞综述这种去广泛关注历史和掌握各种材料。这就是双标吧。&lt;/p>
&lt;p>如果你只是偶然的从历史中学到一课，那么你没有资格指责别人偶然的没有学到过这一课；如果你系统的学习历史中得到这一课，那么请你拿出自己系统学习历史的证据，比如你搞过综述。所以事实上很多人（包括我）也没系统的学习历史（？），所以这可能就是为什么人类从历史中学到的最大的教训就是人类从不从历史中吸取教训（？&lt;/p></description></item><item><title>《长相思·山一程》 分析</title><link>https://livypad.github.io/post/2022-01-09-nostalgia/</link><pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate><guid>https://livypad.github.io/post/2022-01-09-nostalgia/</guid><description>&lt;h1 id="长相思山一程-分析" >《长相思·山一程》 分析
&lt;span>
&lt;a href="#%e9%95%bf%e7%9b%b8%e6%80%9d%e5%b1%b1%e4%b8%80%e7%a8%8b-%e5%88%86%e6%9e%90">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>高中时候芳芳在赏析纳兰性德的《长相思·山一程》时，为了表现原词炼字功力，给出对比版本“风萧瑟，雪纷纷”。当时大家意见里（？，至少在我的印象中）反而认为修改版不是不能接受。而从现在的我看来，也认为反而修改版也很好，甚至可能好于原词。下面先给出原词：&lt;/p>
&lt;blockquote>
&lt;p>山一程，水一程，身向榆关那畔行，夜深千帐灯。&lt;/p>
&lt;p>风一更，雪一更，聒碎乡心梦不成，故园无此声。&lt;/p>
&lt;/blockquote>
&lt;p>我的观念中，对比原词和修改版，原词更加偏重于强调时长，修改版更加偏重于强调强度。而在整个下片考虑，强调强度应该优于强调时长。&lt;br>
第一，从对人的情感激发能力来看，强度先于时长。极端情况下，只有时长没有强度，风雪只能“润物细无声”的话，词人只要不往外看风雪对 ta 都没什么影响，也谈不上接下来的感情波动；只有强度没有时长，雷声持续时间很短暂，但是只要几声雷声就能吓到胆小的小孩一时半会无法睡觉。下一句的“聒”字明显只能搭配上强度因素，而且由上所述，词人的“梦不成”更可能是被强度影响的结果。最后一句的“无此声”也可以解释为风雪声的强度的罕见。当然，也可以辩解时长很长的风雪在故园很罕见，这个问题在下一点中讨论。&lt;/p>
&lt;p>第二，时长对人的影响，边际效果递减非常严重。具体到“梦不成”，也就是失眠的情景，长时间无法入睡，到底是 2 个小时（1 更的时间）还是 4 个小时（2 更的时间），区别并不是那么巨大。人在床上翻来覆去，想事情的情状并不因为时间多少几十分钟会有很大变化。所以在我看来，特意强调“一更”有点描写过度。真正有价值的信息只是知道时间很长，大家并不需要关心时间具体长度。&lt;/p>
&lt;p>当然，还可以辩解说都数了“一更，一更”就暗示了强度大无法睡觉。但我认为，前面两点已经表现了，时长不如强度重要，所以牺牲时长，进一步特化描绘强度，更容易对应下文，反而可能艺术效果更好。&lt;/p>
&lt;p>（失眠时长不那么重要，当然是因为这篇初稿就是我自己失眠躺床上偶然想到的，亲测不是很重要）&lt;/p></description></item><item><title>用生物拟人化</title><link>https://livypad.github.io/post/2021-10-30-creatureemotion/</link><pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate><guid>https://livypad.github.io/post/2021-10-30-creatureemotion/</guid><description>&lt;h1 id="生物拟人" >生物拟人
&lt;span>
&lt;a href="#%e7%94%9f%e7%89%a9%e6%8b%9f%e4%ba%ba">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;p>用某种非人生物概括人性格的理论（注意是概括不是描写，因为描写可以多tag（？），这些理论一般都是映射关系），非常普遍，但这就很奇怪。（这里指代的不仅是动物，furry控什么的，也包含植物，比如比如花语，还有hp里面魔杖木材和巫师性格关系什么的）因为一般大家都认同人的性格复杂很多侧面。这样简单的概括即使能绝对覆盖很大，相对比例也是很可疑的。虽然这么干很简洁就是了。更何况，借用的非人生物特点，很少会考虑或者暗中体现演化亲缘关系。但显然演化近的一般共享特点也应该多一些（？。&lt;/p>
&lt;p>即使认为这么干可以加速对陌生人性格的理解。但问题是，对于点头之交，花时间了解性格意义也不大（？；而大部分深入理解对面性格的场景，本来就是期待和对方长期相处下去，这时候还是准确性是更重要的。至于为啥要用人类本身解释世界，可能可以简单说是自大吧（？&lt;/p></description></item><item><title>杂谈/胡说 浅析七海灯子对喜欢的观念</title><link>https://livypad.github.io/post/2020-08-08-touko/</link><pubDate>Sat, 08 Aug 2020 00:00:00 +0000</pubDate><guid>https://livypad.github.io/post/2020-08-08-touko/</guid><description>&lt;ul>
&lt;li>&lt;a href="#%E6%9D%82%E8%B0%88%E8%83%A1%E8%AF%B4-%E6%B5%85%E6%9E%90%E4%B8%83%E6%B5%B7%E7%81%AF%E5%AD%90%E5%AF%B9%E5%96%9C%E6%AC%A2%E7%9A%84%E8%A7%82%E5%BF%B5">杂谈/胡说 浅析七海灯子对喜欢的观念&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#%E5%A3%B0%E6%98%8E">声明&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E7%BB%9D%E5%AF%B9%E7%9A%84%E7%88%B1">绝对的爱（？&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E7%81%AF%E5%AD%90%E7%9A%84%E8%A7%82%E5%BF%B5">灯子的观念&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E4%BD%9C%E5%93%81%E5%8F%91%E5%B1%95%E5%90%8E%E7%9A%84%E8%A7%82%E5%BF%B5">作品发展后的观念&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E5%90%8E%E8%AF%9D">后话&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="杂谈胡说-浅析七海灯子对喜欢的观念" >杂谈/胡说 浅析七海灯子对喜欢的观念
&lt;span>
&lt;a href="#%e6%9d%82%e8%b0%88%e8%83%a1%e8%af%b4-%e6%b5%85%e6%9e%90%e4%b8%83%e6%b5%b7%e7%81%af%e5%ad%90%e5%af%b9%e5%96%9c%e6%ac%a2%e7%9a%84%e8%a7%82%e5%bf%b5">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h1>&lt;h2 id="声明" >声明
&lt;span>
&lt;a href="#%e5%a3%b0%e6%98%8e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>这只是笔者的个人观点，游戏之作。本意是换个说法理解原著的一些情节。和原作者/原作品/其他同人无关。分析基于笔者的个人看法，如有谬误，敬请斧正。&lt;/p>
&lt;p>本文中说的爱/爱情/喜欢 etc.这些词汇，没有特殊说明，狭义的指代人对人的感情。&lt;/p>
&lt;h2 id="绝对的爱" >绝对的爱（？
&lt;span>
&lt;a href="#%e7%bb%9d%e5%af%b9%e7%9a%84%e7%88%b1">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>在讨论作品之前，先考虑一个问题：&lt;/p>
&lt;p>（在指定对象后，）是否有绝对的爱？&lt;/p>
&lt;p>这个问题可能比较奇怪，比较难回答。回答可能也比较个人化，比较见仁见智。那么，不妨换一个更清晰的问题：&lt;/p>
&lt;p>是否 &lt;strong>&lt;em>应当&lt;/em>&lt;/strong> 有绝对的爱？&lt;/p>
&lt;p>这个问题简单多了。爱情确实重要，但人不止要考虑爱，还要考虑国家，社会，亲情友情（暂时将爱限定于爱情）。那么，最极端的情况下，如果爱人杀人放火吸毒出轨等等无恶不作，从基本的社会道德出发，都不应‘该继续爱 ta。或者换个不是那么极端的例子，职业道德要求，老师和学生是不应该谈恋爱的（这个主要是考虑老师拥有隐含的优势地位，而且潜在的对其他学生不公平）。那么，喜欢其实是有条件性的。&lt;/p>
&lt;h2 id="灯子的观念" >灯子的观念
&lt;span>
&lt;a href="#%e7%81%af%e5%ad%90%e7%9a%84%e8%a7%82%e5%bf%b5">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>在原著中，开始时候的灯子的爱情观念，如下引文（出自漫画第 10 话，大意如此）。&lt;/p>
&lt;blockquote>
&lt;p>“喜欢这样的你”什么的，不就是“你若不再是这样，就不会再喜欢你了”这个意思吗？&lt;/p>
&lt;p>“喜欢”是用来束缚的词语&lt;/p>
&lt;/blockquote>
&lt;p>这样的理论其实是有一定合理性的。本质上，这个理论其实也和上面讨论一样，反对一般观念里面爱的绝对性和崇高性，指出爱的条件性。换个表述。一般的观念是&lt;/p>
&lt;p>$$
p(喜欢|对方是对方)
$$&lt;/p>
&lt;p>而现在我们已经意识到爱是有条件的。&lt;/p>
&lt;p>$$
p(喜欢|对方是对方，对方的行为)
$$&lt;/p>
&lt;h2 id="作品发展后的观念" >作品发展后的观念
&lt;span>
&lt;a href="#%e4%bd%9c%e5%93%81%e5%8f%91%e5%b1%95%e5%90%8e%e7%9a%84%e8%a7%82%e5%bf%b5">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>在先前对原作者的采访中，仲谷老师被问及 ta 本人的对喜欢的观念，老师表示不能透露，因为不能剧透作品的结尾。可以注意到作品在后期，沙弥香对灯子说的一番话，促进了灯子的转变。我们不妨认为这段话反映了作品（以及老师自己）的观念出自漫画第 10 话，大意如此）。&lt;/p>
&lt;blockquote>
&lt;p>…并不是说你不像现在这样就不可以，也不说你变得怎样都无所谓。所以怎么说呢……&lt;/p>
&lt;p>我相信你会一直是我喜欢的样子。我认为喜欢更多是一种信赖，吧。&lt;/p>
&lt;/blockquote>
&lt;p>（似乎看上去正常了很多）&lt;/p>
&lt;p>其实这里可以发现，比较正常的爱情观念，同样也是排斥绝对的爱，而承认了喜欢的条件性。而灯子前期观念实际扭曲的点在于，ta 把喜欢里面的条件看的过分苛刻了。只有少数的，极其集中的行为对应较高的喜欢。不恰当的说，犹如 Dirac $\delta$函数。&lt;/p>
&lt;p>&lt;img src="https://livypad.github.io/assets/img/delta%20func.png" alt="delta函数">&lt;/p>
&lt;p>而一般意义下，喜欢的条件宽泛许多。在一定范围内都是“高原”：虽然可能因为某些具体行为会有上下波动（比如一些摩擦会影响双方关系一类的），但一般来说都能保持在一个比较高的范围里面。这样的喜欢才是世间常态。&lt;/p>
&lt;h2 id="后话" >后话
&lt;span>
&lt;a href="#%e5%90%8e%e8%af%9d">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>这篇杂谈起源于，笔者有次偶然思考灯子的观念，ta 的观点乍一眼其实是有一定道理的。仔细思考后发现其实可以直接依靠条件强弱说明。笔者的思考和本文其实选择了概率论，贝叶斯公式的视角。从贝叶斯的角度，先验的喜欢，在对方行为变化后，结合自己的条件喜欢，得到后验的喜欢。至少对笔者，这套语言更加清晰，更简单。&lt;/p>
&lt;p>这个模型还可以有个现实应用（？）。虽然前文中指出，大部分人的条件喜欢的分布不如前期灯子观念中那样极端，边缘问题仍然存在。所谓的忠诚度测试，经典的情景双难问题（比如落水），就是在测试边缘情况。所谓的分歧，其实就是问题选择挂在喜欢概率“陡坡”处。&lt;/p>
&lt;p>如果继续推广，可能，人们的喜欢实际上可以改成&lt;/p>
&lt;p>$$
p(喜欢|某人的特征和行为)
$$&lt;/p>
&lt;p>这某种意义上会导出&lt;a href="https://what-if.xkcd.com/9/">what if 第九期知心爱人&lt;/a>里面引用的歌词所表达的，理论上，（在可能的平行世界里面），爱上其他人，生活也还行。&lt;/p>
&lt;blockquote>
&lt;p>But of the 9.999 hundred thousand other loves,&lt;/p>
&lt;p>Statistically, some of them would be equally nice.&lt;/p>
&lt;/blockquote>
&lt;p>这确实是个悲伤的，却又看起来正确性挺高的推论。(-_-)（By the way，仲谷老师的《月哭》结尾大概也有类似的悲伤）&lt;/p></description></item></channel></rss>